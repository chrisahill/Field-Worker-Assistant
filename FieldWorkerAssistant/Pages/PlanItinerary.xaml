<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="FieldWorkerAssistant.Pages.PlanItinerary"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:FieldWorkerAssistant.Pages"
    xmlns:common="using:FieldWorkerAssistant.Common"
    xmlns:converters="using:FieldWorkerAssistant.Converters"
    xmlns:commands="using:FieldWorkerAssistant.Commands"
    xmlns:esri="using:Esri.ArcGISRuntime.Controls"
    xmlns:esriLayers="using:Esri.ArcGISRuntime.Layers"
    xmlns:esriSymbols="using:Esri.ArcGISRuntime.Symbology"
    xmlns:esriQuery="using:Esri.ArcGISRuntime.Tasks.Query"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:PriorityToBrushConverter x:Key="PriorityToColorConverter" />
        <commands:SelectAllCommand x:Key="SelectAllCommand" />
        <commands:ClearSelectedCommand x:Key="ClearSelectedCommand" />
        <Grid x:Key="DataContextProxy" Tag="{Binding}" />
        <converters:ServiceItemsToFeatures x:Key="ServiceItemsToFeaturesConverter" />
        
        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">Select Itinerary Items</x:String>
        <Style x:Key="ItineraryItemsListBoxStyle" TargetType="ListBox">
            <Setter Property="Foreground" Value="{StaticResource ListBoxForegroundThemeBrush}"/>
            <Setter Property="Background" Value="{StaticResource ListBoxBackgroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBoxBorderThemeBrush}"/>
            <Setter Property="BorderThickness" Value="{StaticResource ListBoxBorderThemeThickness}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="True"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Enabled"/>
            <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="TabNavigation" Value="Once"/>
            <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="LayoutRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                        <!--<Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxFocusBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>-->
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer x:Name="ScrollViewer" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid Background="#333333" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>

        <Grid Grid.Row="1">
            <ListBox ItemsSource="{Binding AllServiceItems}" 
                     Background="Transparent" 
                     Style="{StaticResource ItineraryItemsListBoxStyle}"
                     SelectionMode="Multiple"
                     common:AttachedProperties.SelectedItemsSource="{Binding IncludedServiceItems}">                
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <CheckBox x:Name="IncludedCheckBox"
                                IsChecked="{Binding Included, Mode=TwoWay}"
                                IsHitTestVisible="False"
                                        Margin="0,5,0,5">
                                <CheckBox.RenderTransform>
                                    <ScaleTransform CenterX="10" CenterY="10"
                                                    ScaleX="1.4" ScaleY="1.4" />
                                </CheckBox.RenderTransform>
                            </CheckBox>
                            <TextBlock 
                                Margin="20,5,0,5" 
                                FontSize="30" 
                                Foreground="White" 
                                Opacity="0.7"
                                VerticalAlignment="Center" 
                                Text="{Binding Service.ServiceRequestID}" 
                                Width="100" 
                                Grid.Column="1"/>
                            <TextBlock 
                                Margin="10,5,0,5" 
                                FontSize="30" 
                                Foreground="{Binding Service.Severity,
                                    Converter={StaticResource PriorityToColorConverter}}" 
                                VerticalAlignment="Center" 
                                Text="{Binding Service.Severity}" 
                                Width="125"
                                Grid.Column="2"/>
                            <TextBlock 
                                Margin="10,5,0,5" 
                                FontSize="30" 
                                Foreground="White" 
                                VerticalAlignment="Center" 
                                Text="{Binding Service.ProblemDescription}" 
                                TextWrapping="Wrap"
                                Grid.Column="3"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>

        <esri:Map x:Name="MainMap"
                  Grid.Column="1"
                  Grid.Row="1"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">
            <esriLayers:ArcGISTiledMapServiceLayer
                ServiceUri="http://services.arcgisonline.com/arcgis/rest/services/World_Topo_Map/MapServer" />
            <esriLayers:FeatureLayer
                ID="WorkItemsLayer"
                ServiceUri="http://services.arcgis.com/pmcEyn9tLWCoX7Dm/arcgis/rest/services/HackathonSR/FeatureServer/0" 
                Renderer="{StaticResource WorkItemsRenderer}"
                Tapped="WorkItemsLayer_Tapped">
                <esriLayers:FeatureLayer.OutFields>
                    <esriQuery:OutFields>
                        <x:String>*</x:String>
                    </esriQuery:OutFields>
                </esriLayers:FeatureLayer.OutFields>
            </esriLayers:FeatureLayer>
            <esriLayers:GraphicsLayer 
                ID="IncludedItemsLayer">
                <esriLayers:GraphicsLayer.Renderer>
                    <esriSymbols:SimpleRenderer>
                        <esriSymbols:SimpleRenderer.Symbol>
                            <esriSymbols:SimpleMarkerSymbol Color ="Cyan"
                                                            Size="28">
                                <esriSymbols:SimpleMarkerSymbol.Outline>
                                    <esriSymbols:SimpleLineSymbol Color="Black"
                                                                  Width="2" />
                                </esriSymbols:SimpleMarkerSymbol.Outline>
                            </esriSymbols:SimpleMarkerSymbol>
                        </esriSymbols:SimpleRenderer.Symbol>
                    </esriSymbols:SimpleRenderer>
                </esriLayers:GraphicsLayer.Renderer>
            </esriLayers:GraphicsLayer>

        </esri:Map>
        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
    <common:LayoutAwarePage.BottomAppBar>
        <AppBar IsSticky="True" IsOpen="True" Background="{StaticResource ApplicationPageBackgroundThemeBrush}" BorderBrush="Transparent">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>                
                <Button
                    Content="Select All"
                    Command="{Binding IncludeAllCommand}" />
                <Button
                    Margin="10,0,0,0"
                    Content="Clear All"
                    Grid.Column="1"
                    Command="{Binding ExcludeAllCommand}" />
                <Button Content="Download"
                        Grid.Column="2"
                        Command="{Binding DownloadCommand}"
                        HorizontalAlignment="Right"/>
            </Grid>
        </AppBar>
    </common:LayoutAwarePage.BottomAppBar>
</common:LayoutAwarePage>
